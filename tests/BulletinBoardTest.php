<?php

use App\Listeners\LoggingListener;
use App\Listeners\MailListener;
use App\Listeners\SlackListener;
use App\Subjects\BulletinBoard;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2020-03-04 at 23:31:55.
 */
class BulletinBoardTest extends PHPUnit_Framework_TestCase
{
    /**
     * @var BulletinBoard
     */
    protected $bulletinBoard;

    /**
     *
     * @var PHPUnit_Framework_MockObject_MockObject
     */
    protected $mailListener;

    /**
     * @var array
     */
    private $listeners = [];
    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->bulletinBoard = new BulletinBoard('テスト太郎');
        $this->mailListener = new MailListener();
        $this->bulletinBoard->addObserver($this->mailListener);

      //  $this->bulletinBoard->comment('テストテキスト');
    }

    /**
     * @covers App\Subjects\BulletinBoard::getName
     * @todo   Implement testGetName().
     */
    public function testGetName()
    {
        $this->assertThat($this->bulletinBoard->getName(), $this->equalTo('テスト太郎'));
    }

    /**
     * @covers App\Subjects\BulletinBoard::comment
     *
     */
    public function testComment()
    {
        $this->assertThat($this->bulletinBoard->comment('コメントテスト'), $this->equalTo('テスト太郎:コメントテスト'));

        // TODO processComment　のテストを書くっス??

    }

    /**
     * @covers App\Subjects\BulletinBoard::addComment
     * @todo   Implement testAddComment().
     */
    public function testAddComment()
    {
        $this->bulletinBoard->comment('コメントテスト1');
        $this->bulletinBoard->comment('コメントテスト2');
        $this->bulletinBoard->comment('コメントテスト3');

     //   $this->bulletinBoard->processComment();


    }

    /**
     * @covers App\Subjects\BulletinBoard::processComment
     * @todo   Implement testProcessComment().
     */
    public function testProcessComment()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }


    /**
     * @test
     */
    public function testAddObserver()
    {

        // FAIL

        $expected = [
            'LoggingListener',
            'MailListener',
            'SlackListener',
        ];


        $this->bulletinBoard->addObserver(new LoggingListener());
        $this->bulletinBoard->addObserver(new MailListener());
        $this->bulletinBoard->addObserver(new SlackListener());


        $this->assertEquals($this->listeners,$expected);

    }
    
}
