<?php

use App\Listeners\LoggingListener;
use App\Listeners\MailListener;
use App\Listeners\SlackListener;
use App\Subjects\BulletinBoard;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2020-03-04 at 23:31:55.
 */
class BulletinBoardTest extends PHPUnit_Framework_TestCase
{
    /**
     * @var BulletinBoard
     */
    protected $bulletinBoard;

    /**
     *
     * @var PHPUnit_Framework_MockObject_MockObject
     */
    protected $mailListener;

    /**
     * @var array
     */
    public $listeners = [];
    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->bulletinBoard = new BulletinBoard('テスト太郎');
    }

    /**
     * @covers App\Subjects\BulletinBoard::getName
     * @todo   Implement testGetName().
     */
    public function testGetName()
    {
        $this->assertThat($this->bulletinBoard->getName(), $this->equalTo('テスト太郎'));
    }

    /**
     * @covers App\Subjects\BulletinBoard::comment
     *
     */
    public function testComment()
    {
        $this->assertThat($this->bulletinBoard->comment('コメントテスト'), $this->equalTo('テスト太郎:コメントテスト'));
    }

    /**
     *
     * @test
     */
    public function testAddObserver()
    {
        $this->bulletinBoard->addObserver(new LoggingListener());
        $this->bulletinBoard->addObserver(new MailListener());
        $this->bulletinBoard->addObserver(new SlackListener());

        $expected = [
            'App\Listeners\LoggingListener' => new LoggingListener(),
            'App\Listeners\MailListener' => new MailListener(),
            'App\Listeners\SlackListener' => new SlackListener(),
        ];

        $this->assertEquals($expected,$this->bulletinBoard->listeners);
    }


    /**
     *
     * @test
     */
    public function testRemoveObserver()
    {
        $this->bulletinBoard->addObserver(new LoggingListener());
        $this->bulletinBoard->addObserver(new MailListener());
        $this->bulletinBoard->removeObserver(new SlackListener());

        $expected = [
            'App\Listeners\LoggingListener' => new LoggingListener(),
            'App\Listeners\MailListener' => new MailListener(),
        ];

        $this->assertEquals($expected,$this->bulletinBoard->listeners);
    }
}
